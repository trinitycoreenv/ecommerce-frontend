name: Render Schema and Data Import

on:
  workflow_dispatch:
    inputs:
      run_import:
        description: "Run data import (requires data/export.json committed)"
        required: false
        default: "true"
        type: choice
        options:
          - "true"
          - "false"

jobs:
  apply-schema:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false
          cache: true

      - name: Prepare DATABASE_URL with sslmode=require
        shell: bash
        run: |
          URL="${{ secrets.DATABASE_URL_RENDER }}"
          if [[ "$URL" != *"sslmode="* ]]; then
            if [[ "$URL" == *"?"* ]]; then
              URL="$URL&sslmode=require"
            else
              URL="$URL?sslmode=require"
            fi
          fi
          echo "DATABASE_URL=$URL" >> $GITHUB_ENV

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Apply schema with Prisma
        run: pnpm exec prisma db push --skip-generate --force-reset

  import-data:
    runs-on: ubuntu-latest
    needs: apply-schema
    if: ${{ github.event.inputs.run_import == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false
          cache: true

      - name: Prepare DATABASE_URL_RENDER with sslmode=require
        shell: bash
        run: |
          URL="${{ secrets.DATABASE_URL_RENDER }}"
          if [[ "$URL" != *"sslmode="* ]]; then
            if [[ "$URL" == *"?"* ]]; then
              URL="$URL&sslmode=require"
            else
              URL="$URL?sslmode=require"
            fi
          fi
          echo "DATABASE_URL_RENDER=$URL" >> $GITHUB_ENV

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Import data to Render
        run: node scripts/import-render-data.js